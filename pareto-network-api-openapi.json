{
    "openapi": "3.0.0",
    "info": {
        "version": "",
        "title": "PARETO NETWORK API",
        "description": "The Pareto Network API is used by Sentinels to catalogue and relay information between nodes. Interacting with a Pareto Sentinel uses this standardized RESTful API. Authentication is done using a JSON Web Token (JWT) stored as a secure browser cookie. Any RESTful client will need to set the cookie. Here is a tutorial for getting the initial cookie https:\/\/blog.pareto.network\/how-to-use-the-pareto-sentinel-api-434afb75aace",
        "termsOfService": ""
    },
    "servers": [
        "https\/"
    ],
    "paths": {
        "\/sign": {
            "post": {
                "summary": "Cookie authentication",
                "description": "Test the hash between a message and public key. If the test is passed, a cookie is stored. The parameters of this request are gotten from MetaMask",
                "operationId": "PostSign",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/rank": {
            "get": {
                "summary": "Get the list of all addresses sorted by rank",
                "description": "Get all the addresses sorted by rank. The ranking is gotten from the Ethereum score",
                "operationId": "GetRank",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/auth": {
            "get": {
                "summary": "Test if user is properly authenticated",
                "description": "Simple authenticated method to determine if user is properly authenticated.",
                "operationId": "GetAuth",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/unsign": {
            "post": {
                "summary": "Unsign http client for the current user",
                "description": "Manage unsign proccess. Delete cookie with header set-cookie",
                "operationId": "PostUnsign",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/address": {
            "get": {
                "summary": "Get the information of the current user",
                "description": "Get the information of the current user. The current user is fetched using the auth cookie.",
                "operationId": "GetAddress",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/address\/{address}": {
            "get": {
                "summary": "Get the information of a specific user",
                "description": "Get the information of a specific user.",
                "operationId": "GetAddressAddress",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "address to use"
                    }
                ]
            }
        },
        "\/content": {
            "get": {
                "summary": "Get the content about the actionable investing intels",
                "description": "Get all available content about the actionable investing intels.",
                "operationId": "GetContent",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/content\/me": {
            "get": {
                "summary": "Get the content available for current user",
                "description": "Get the content available for current user",
                "operationId": "GetContentMe",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/userinfo": {
            "get": {
                "summary": "Get the information of the profile user",
                "description": "Get the information of the current user. The current user is fetched using the auth cookie.",
                "operationId": "GetUserinfo",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "latest",
                        "in": "query",
                        "description": "if true force update ranking. This must be call only after sign process"
                    }
                ]
            }
        },
        "\/userinfo\/{address}": {
            "get": {
                "summary": "Get the profile of a specific user",
                "description": "Get the profile of a specific user.",
                "operationId": "GetUserinfoAddress",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "address",
                        "in": "path",
                        "description": "address to use"
                    }
                ]
            }
        },
        "\/updateuser": {
            "post": {
                "summary": "Update the profile of the current user",
                "description": "Update the profile of the current user",
                "operationId": "PostUpdateuser",
                "deprecated": 0,
                "parameters": []
            }
        },
        "\/profile-image": {
            "get": {
                "summary": "Get the image profile",
                "description": "Get the image profile",
                "operationId": "GetProfileImage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "image",
                        "in": "query",
                        "description": "resource to be gotten"
                    }
                ]
            }
        },
        "\/upload-profile": {
            "post": {
                "summary": "Upload image",
                "description": "Upload Image",
                "operationId": "PostUploadProfile",
                "deprecated": 0,
                "parameters": []
            }
        }
    },
    "components": {
        "schemas": []
    }
}